footprint: [[-0.3, -0.3], [-0.3, 0.3], [0.3, -0.3], [0.3, 0.3]]
map_type: voxel # 3D map (otherwise costmap 2D map)

obstacle_layer:
  enabled:              true
  max_obstacle_height:  2
  origin_z:             0.0
  z_resolution:         0.2 # voxel size
  z_voxels:             2 # number of voxel in height h_map = z_resolution * z_voxel 
  unknown_threshold:    15 
  mark_threshold:       0 # min number of voxel in a column so that it is considered not empty
  combination_method:   1 # manages the data arriving from the others layers. 0: it doesn't use the data, 99: it uses just the data arriving from the other layers, 1: uses every data 
  track_unknown_space:  true    # true needed for disabling global path planning through unknown space
  obstacle_range: 2.5   # the default maximum distance from the robot at which an obstacle will be inserted into the cost map [m] (This can be over-ridden on a per-sensor basis)
  raytrace_range: 3   # the default range [m] at which to raytrace out obstacles from the map using sensor data (This can be over-ridden on a per-sensor basis)
  publish_voxel_map: false 
  observation_sources:  scan 
  scan: {sensor_frame: base_link, data_type: LaserScan, topic: /scan, marking: true, clearing: true, min_obstacle_height: 0.25, max_obstacle_height: 2}


#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.2  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  enabled:              true